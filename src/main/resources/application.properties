server.port=80

# JDBC 연동
# 1. 해당 JDBC 클래스 호출
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 2. 해당 JDBC 클래스 이용한 접속할 DB 서버 경로 설정
spring.datasource.url=jdbc:mysql://localhost:3306/springweb2
# 3. DB서버의 아이디와 비밀번호
spring.datasource.username=root
spring.datasource.password=1234

# 4. JPA DDL ( create, drop, alter )
    # 1. 서버가 켜질 때 DDL 생성 여부
spring.jpa.hibernate.ddl-auto=create

# 5. JPA가 SQL 실행한 결과 보고 있을 때 CONSOLE에 실행된 SQL 표시
# spring.jpa.properties.hibernate.show_sql=true
# 6. CONSOLE에 실행된 SQL 표시 할때 엔터처리
# spring.jpa.properties.hibernate.format_sql=true
# 7. 샘플 데이터
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
# 샘플데이터 (resource 폴더 내 data.sql 파일 내 코드를 읽어준다 )

# ===================== 카카오 ===================== #
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=851b4ffa89bb486a143ca726e1b95835
spring.security.oauth2.client.registration.kakao.client-secret=ITeTkv2mB81F3WwkPu1W5jjbi5b7RMXo
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

# ===================== 네이버 ===================== #
spring.security.oauth2.client.provider.naver.user-name-attribute=id
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=6ZLzJRdCHIUVP9O5TYr7
spring.security.oauth2.client.registration.naver.client-secret=AfKHK5mdoh
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=profile_nickname
# ===================== 구글(스프링에서 설정 제공) ===================== #
spring.security.oauth2.client.registration.google.client-id=893776003702-p61om653uor6b9cubb8ogevhjoq0o1u3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile